apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-ui
  namespace: kafka
  labels:
    app: kafka-ui
spec:
  serviceName: "kafka-ui"
  replicas: 1  # Single instance for UI
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: "{{ .Values.kafkaUI.image.repository }}:{{ .Values.kafkaUI.image.tag }}"
          imagePullPolicy: {{ .Values.kafkaUI.image.pullPolicy }}
          ports:
            - containerPort: 9000
          env:
            - name: KAFKA_BROKERCONNECT
              value: "{{ .Values.kafkaUI.environment.KAFKA_BROKERCONNECT }}"
          volumeMounts:
            - name: kafka-ui-storage
              mountPath: /data  # Adjust if Kafka UI requires a specific path
  volumeClaimTemplates:
    - metadata:
        name: kafka-ui-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi  # Adjust size as needed
        storageClassName: {{ .Values.kafkaUI.persistence.storageClass }}  # Uses your defined storage class

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: kafka
spec:
  ports:
    - port: 9000
  selector:
    app: kafka-ui
  type: {{ .Values.kafkaUI.service.type }}
