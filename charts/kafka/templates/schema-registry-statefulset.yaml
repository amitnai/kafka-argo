apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: schema-registry
  labels:
    app: schema-registry
spec:
  serviceName: "schema-registry"
  replicas: {{ .Values.schemaRegistry.replicaCount }}
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
        - name: schema-registry
          image: "{{ .Values.schemaRegistry.image.repository }}:{{ .Values.schemaRegistry.image.tag }}"
          imagePullPolicy: {{ .Values.schemaRegistry.image.pullPolicy }}
          ports:
            - containerPort: 8081
          env:
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: {{ .Values.schemaRegistry.environment.SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS }}
            - name: SCHEMA_REGISTRY_LISTENER
              value: {{ .Values.schemaRegistry.environment.SCHEMA_REGISTRY_LISTENER }}
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: {{ .Values.schemaRegistry.environment.SCHEMA_REGISTRY_HOST_NAME }}
            - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
              value: {{ .Values.schemaRegistry.environment.SCHEMA_REGISTRY_KAFKASTORE_TOPIC }}
          volumeMounts:
            - name: schema-registry-persistent-storage
              mountPath: /var/lib/schema-registry
  volumeClaimTemplates:
    - metadata:
        name: schema-registry-pvc
      spec:
        accessModes:
          - {{ .Values.schemaRegistry.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.schemaRegistry.persistence.size }}
        storageClassName: {{ .Values.schemaRegistry.persistence.storageClass }}
