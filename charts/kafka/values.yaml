namespace: kafka

kafka:
  replicaCount: 3  # Deploy 3 Kafka brokers

  image:
    repository: confluentinc/cp-kafka
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP  # Expose Kafka brokers externally
    port: 9092

  persistence:
    enabled: true
    size: 10Gi
    storageClass: kafka
    accessModes:
      - ReadWriteOnce  # Ensure this matches your desired storage class name

  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"

  environment:
    KAFKA_ZOOKEEPER_CONNECT: "zookeeper.kafka.svc.cluster.local:2181"
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    # Generate unique broker ID using StatefulSet ordinal index
    #    KAFKA_BROKER_ID: "$(echo ${HOSTNAME##*-})"
    # Advertise listener correctly using StatefulSet hostname
    KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://$(POD_NAME).kafka-service.svc.cluster.local:9092"
    #KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://$(hostname -f):9092"
    # Enable topic auto-creation
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

    # Define Kafka listeners
    KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
    KAFKA_LISTENER_SECURITY_PROTOCOL: "PLAINTEXT"
    KAFKA_LISTENER_NAME_INTERNAL: "INTERNAL"
      #- name: POD_NAME
      #valueFrom:
      # fieldRef:
      #   fieldPath: metadata.name  # This resolves to the pod name (e.g., kafka-0, kafka-1, etc.)
      # - name: KAFKA_BROKER_ID
#     valueFrom:
            # podAnnotations:
            #kafka.podName: "$(POD_NAME)"

# Zookeeper Configuration
zookeeper:
  enabled: true
  replicaCount: 3  # 3-node Zookeeper cluster

  image:
    repository: confluentinc/cp-zookeeper
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 2181

  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 5Gi
    storageClass: kafka  # Make sure this matches your storage class


  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "1000m"
      memory: "1Gi"

  environment:
    ZOOKEEPER_CLIENT_PORT: "2181"
    ZOOKEEPER_TICK_TIME: "2000"

# Kafka Connect Configuration
kafkaConnect:
  enabled: true
  replicaCount: 3  # Kafka Connect replicas
  image:
    repository: confluentinc/cp-kafka-connect
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  service:
    type: LoadBalancer  # Expose Kafka Connect externally
    port: 8083  # Kafka Connect REST API port
  
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: kafka  # Make sure this matches your storage class

  environment:
    CONNECT_BOOTSTRAP_SERVERS: "kafka-service.kafka.svc.cluster.local:9092"
    CONNECT_REST_ADVERTISED_LISTENER: "kafka-connect-service.kafka.svc.cluster.local"
    CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
    CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
    CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"  # For plugins
    CONNECT_GROUP_ID: "connect-cluster"
    CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
    CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
    CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
    CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect-$(POD_NAME).kafka.svc.cluster.local"
    CONNECT_REST_PORT: "8083"
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "3"
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "3"
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "3"



schemaRegistry:
  replicaCount: 1  # Keep Schema Registry as a single instance (non-scalable)

  image:
    repository: confluentinc/cp-schema-registry
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP  # Internal service for Schema Registry
    port: 8081

  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: kafka  # Make sure this matches your storage class

  environment:
    SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-service.kafka.svc.cluster.local:9092"
    SCHEMA_REGISTRY_LISTENER: "http://0.0.0.0:8081"
    SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
    SCHEMA_REGISTRY_KAFKASTORE_TOPIC: "_schemas"


# Kafka UI (e.g., Kafdrop or Kafka Manager)
kafkaUI:
  enabled: true
  image:
    repository: obsidiandynamics/kafdrop
    tag: latest
  service:
    type: LoadBalancer  # Expose UI externally
    port: 9000
  environment:
    KAFKA_BROKERCONNECT: "PLAINTEXT://kafka-0.kafka.kafka.svc.cluster.local:9092,kafka-1.kafka.kafka.svc.cluster.local:9092,kafka-2.kafka.kafka.svc.cluster.local:9092"

# Persistent Storage Configuration
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 5Gi
    storageClass: kafka  # Make sure this matches your storage class
